<?php

return array(
    'dashboard' => array(
        'totalClients' => 'Total Clients',
        'newClients' => 'New Clients',
        'totalEmployees' => 'Total Employees',
        'totalProjects' => 'Total Projects',
        'newProjects' => 'New Projects',
        'totalPaidInvoices' => 'Paid Invoices',
        'totalTickets' => 'Tickets',
        'totalOpenTickets' => 'Open Tickets',
        'openTickets' => 'Open Tickets',
        'totalHoursLogged' => 'Hours Logged',
        'totalPendingTasks' => 'Pending Tasks',
        'totalCompletedTasks' => 'Completed Tasks',
        'totalPendingIssues' => 'Total Pending Issues',
        'totalPaidAmount' => 'Paid Amount',
        'totalOutstandingAmount' => 'Outstanding Amount',
        'recentEarnings' => 'Recent Earnings',
        'overdueTasks' => 'Overdue Tasks',
        'pendingClientIssues' => 'Pending Issues',
        'projectActivityTimeline' => 'Project Activity Timeline',
        'userActivityTimeline' => 'User Activity Timeline',
        'dueDate' => 'Due Date',
        'weatherSetLocation' => 'Set current location to see weather',
        'totalTodayAttendance' => 'Today Attendance',
        'newTickets' => 'Open Tickets',
        'totalUnpaidInvoices' => 'Due Invoices',
        'followUpDate' => 'Follow Up Date',
        'pendingFollowUp' => 'Pending FollowUp',
        'totalLeads' => 'Total Leads',
        'newLead' => 'New Lead',
        'newproduct' => 'New Product',
        'totalConvertedClient' => 'Total Client Convert',
        'totalPendingFollowUps' => 'Pending Follow Up',
        'nextFollowUp' => 'Next Follow Up',
        'holidayCheck' => 'Today is Holiday for',
        'totalArchiveProjects' => 'Archived Projects',
        'freeEmployees' => 'Not working on project',
        'dashboardWidgets' => 'Dashboard Widgets',
        'totalResolvedTickets' => 'Resolved Tickets',
        'totalUnresolvedTickets' => 'Unresolved Tickets',
        'clientFeedback' => 'Client Feedback',
        'settingsLeaves' => 'Leaves Calendar',
        'totalActiveClients' => 'Active Clients',
        'totalContractsSigned' => 'Contracts Signed',
        'totalContractsGenerated' => 'Contracts Generated',
        'totalLeadConversions' => 'Deal Conversions',
        'latestClient' => 'Latest Clients',
        'recentLoginActivities' => 'Recent Login Activities',
        'clientWiseEarnings' => 'Client Wise Earnings',
        'clientWiseTimelogs' => 'Client Wise Timelogs',
        'leadVsStatus' => 'Deal Count by Stages and Pipeline',
        'leadVsSource' => 'Leads Count by Source',
        'totalExpenses' => 'Total Expenses',
        'totalEarnings' => 'Total Earnings',
        'totalProfit' => 'Total Profit',
        'totalPendingAmount' => 'Total Pending Amount',
        'earningsByClient' => 'Earnings By Client',
        'earningsByProjects' => 'Earnings By Projects',
        'lastReceivedPayments' => 'Last Received Payments',
        'invoiceTab' => 'Invoices',
        'estimateTab' => 'Estimates',
        'expenseTab' => 'Expenses',
        'paymentTab' => 'Payments',
        'duePaymentsTab' => 'Due Payments',
        'proposalTab' => 'Proposals',
        'invoiceOverview' => 'Invoice Overview',
        'invoiceDraft' => 'Draft',
        'invoiceNotSent' => 'Not Sent',
        'invoiceUnpaid' => 'Unpaid',
        'invoicePartiallyPaid' => 'Partially Paid',
        'invoiceOverdue' => 'Overdue',
        'invoicePaid' => 'Paid',
        'estimateOverview' => 'Estimate Overview',
        'estimateDraft' => 'Draft',
        'estimateNotSent' => 'Not Sent',
        'estimateSent' => 'Sent',
        'estimateExpired' => 'Expired',
        'estimateDeclined' => 'Declined',
        'estimateAccepted' => 'Accepted',
        'proposalOverview' => 'Proposal Overview',
        'proposalWaiting' => 'Waiting',
        'proposalConverted' => 'Converted',
        'proposalDeclined' => 'Declined',
        'proposalAccepted' => 'Accepted',
        'proposalExpired' => 'Expired',
        'totalLeavesApproved' => 'Leaves Approved',
        'totalNewEmployee' => 'New Employees',
        'totalEmployeeExits' => 'Employee Exits',
        'departmentWiseEmployee' => 'Department Wise Employee',
        'designationWiseEmployee' => 'Designation Wise Employee',
        'genderWiseEmployee' => 'Gender Wise Employee',
        'roleWiseEmployee' => 'Role Wise Employee',
        'averageAttendance' => 'Average Attendance',
        'leavesTaken' => 'Leaves Taken',
        'lateAttendanceMark' => 'Late Attendance',
        'lateMark' => 'Late Mark',
        'totalProject' => 'Total Projects',
        'totalOverdueProject' => 'Total Overdue Project',
        'statusWiseProject' => 'Status Wise Projects',
        'pendingMilestone' => 'Pending Milestone',
        'totalUnassignedTicket' => 'Total Unassigned Ticket',
        'typeWiseTicket' => 'Type Wise Ticket',
        'statusWiseTicket' => 'Status Wise Ticket',
        'channelWiseTicket' => 'Channel Wise Ticket',
        'thisMonth' => 'This Month',
        'timelogs' => 'Timelogs',
        'privateTaskInfo' => 'Private tasks not included',
        'verificationPending' => 'Account verification pending',
        'verificationPendingInfo' => 'Your account verification is pending by the owner.',
        'birthday' => 'Birthdays',
        'inDays' => 'in :days days',
        'inDay' => 'in :days day',
        'profile' => 'Profile',
        'shiftSchedule' => 'Shift Schedule',
        'notices' => 'Notices',
        'tasks' => 'Tasks',
        'projects' => 'Projects',
        'myTask' => 'My Tasks',
        'myCalender' => 'My Calender',
        'weekTimelog' => 'Week Timelogs',
        'lead' => 'Leads',
        'leave' => 'On Leave Today',
        'workFromHome' => 'On Work From Home Today',
        'fullDay' => 'Full Day',
        'headcount' => 'Headcount',
        'appreciation' => 'Appreciations',
        'joiningVsAttrition' => 'Joining Vs Attrition',
        'workAnniversary' => 'Work Anniversary',
        'joinedToday' => 'Joined Today',
        'ticket' => 'Tickets',
        'noticePeriodDuration' => 'Notice Period Duration',
        'probationDate' => 'Probation Date',
        'internshipDate' => 'Internship Date',
        'contractDate' => 'Contract Date',
        'dashboardWidgetsSettings' => 'Dashboard Widgets Settings',

        'addNewProduct' => 'Add New Product',
        'totalDeals' => 'Total Deals',
    ),
    'client' => array(
        'createNote' => 'Add Note',
        'noteTitle' => 'Note Title',
        'noteType' => 'Note Type',
        'noteDetail' => 'Note Detail',
        'visibleToClient' => 'Visible To Client',
        'askToReenterPassword' => 'Ask to re-enter password',
        'createTitle' => 'Add Client Info',
        'companyDetails' => 'Company Details',
        'companyName' => 'Company Name',
        'website' => 'Official Website',
        'address' => 'Address',
        'clientDetails' => 'Client Details',
        'clientBasicDetails' => 'Client Basic Details',
        'clientOtherDetails' => 'Other Details',
        'clientName' => 'Client Name',
        'clientEmail' => 'Client Email',
        'clientPhone' => 'Client Phone',
        'emailNote' => 'Client will login using this email and email notifications will be sent to this email.',
        'password' => 'Password',
        'passwordNote' => 'Client will login using this password.',
        'passwordUpdateNote' => 'Leave blank to keep the current password.',
        'mobile' => 'Mobile',
        'updateTitle' => 'Update Client Info',
        'addNewClient' => 'Add New Client',
        'viewDetails' => 'View Details',
        'projectName' => 'Project Name',
        'startedOn' => 'Started On',
        'deadline' => 'Deadline',
        'generateRandomPassword' => 'Generate Random Password',
        'offline' => 'Offline',
        'online' => 'Online',
        'all' => 'All',
        'sendCredentials' => 'Send Credentials',
        'sendCredentialsMessage' => 'Do you want to send credentials via E-mail to the client ?',
        'assignProject' => 'Assign Project',
        'cell' => 'Cell',
        'officePhoneNumber' => 'Office Phone Number',
        'addedOn' => 'Added On',
        'clientCategory' => 'Client Category',
        'clientSubCategory' => 'Client Sub Category',
        'profileInfo' => 'Profile Info',
        'clientCanLogin' => 'Login Allowed?',
        'salutation' => 'Salutation',
    ),
    'credit-notes' => array(
        'currency' => 'Currency',
        'creditNoteDate' => 'Credit Note Date',
        'isRecurringPayment' => 'Is it a recurring payment?',
        'item' => 'Item',
        'qty' => 'Quantity',
        'unitPrice' => 'Unit Price',
        'tax' => 'Tax',
        'amount' => 'Amount',
        'addItem' => 'Add Item',
        'subTotal' => 'Sub Total',
        'discount' => 'Discount',
        'total' => 'Total',
        'addCreditNote' => 'Add Credit Note',
        'billingFrequency' => 'Billing Frequency',
        'billingInterval' => 'Billing Interval',
        'billingCycle' => 'Billing Cycle',
        'billedTo' => 'Billed To',
        'generatedBy' => 'Generated By',
        'price' => 'Price',
        'downloadPdf' => 'Download Pdf',
        'creditAmountTotal' => 'Credit Amount Total',
        'creditAmountRemaining' => 'Credits Remaining',
        'creditAmountUsed' => 'Credit Amount Used',
        'applyToInvoice' => 'Apply Credits To Invoice',
        'closed' => 'Closed',
        'open' => 'Open',
        'paid' => 'Paid',
        'unpaid' => 'Unpaid',
        'partial' => 'Partial',
        'uploadInvoice' => 'Upload Invoice',
        'addTax' => 'Add Tax',
    ),
    'contacts' => array(
        'addContact' => 'Add Contact',
        'contactName' => 'Contact Name',
    ),
    'employees' => array(
        'addNewEmployee' => 'Add New Employee',
        'createTitle' => 'Add Employee Info',
        'employeeName' => 'Employee Name',
        'employeeEmail' => 'Employee Email',
        'emailNote' => 'Employee will login using this email.',
        'employeePassword' => 'Password',
        'passwordNote' => 'Employee will login using this password.',
        'jobTitle' => 'Job Title',
        'hourlyRate' => 'Hourly Rate',
        'updateTitle' => 'update Employee Info',
        'updatePasswordNote' => 'Employee will login using this password. (Leave blank to keep current password)',
        'tasksDone' => 'Tasks Done',
        'hoursLogged' => 'Hours Logged',
        'activity' => 'Activity',
        'profile' => 'Profile',
        'fullName' => 'Full Name',
        'startTime' => 'Start Time',
        'endTime' => 'End Time',
        'employeeIdHelp' => '<p>Unique ID you use to identify employees in your organization.</p><p>For employees created through <b>Invite</b>, an employee id is automatically generated, which you can change later.</p>',
        'totalHours' => 'Total Hours',
        'totalMinutes' => 'Total Minutes',
        'memo' => 'Memo',
        'slackUsername' => 'Slack Member ID',
        'joiningDate' => 'Joining Date',
        'workAnniversary' => 'Work Anniversary',
        'joineeAndWorkAnniversary' => 'Today\'s Joinings & Work Anniversary',
        'gender' => 'Gender',
        'title' => 'Select Employee',
        'role' => 'Role',
        'lastDate' => 'Exit Date',
        'employeeId' => 'Employee ID',
        'chooseDepartment' => 'Choose Department',
        'chooseDesignation' => 'Choose Designation',
        'chooseStatus' => 'Choose Status',
        'pendingTasks' => 'Pending Tasks',
        'leavesTaken' => 'Leaves Taken',
        'department' => 'Department',
        'designation' => 'Designation',
        'status' => 'Status',
        'employeeIdInfo' => 'Employee ID is the unique ID distributed to employees',
        'accountDetails' => 'Account Details',
        'inviteLink' => 'Invite by link',
        'inviteEmail' => 'Invite by email',
        'sendInvite' => 'Send Invite',
        'createLink' => 'Create Link',
        'createLinkLabel' => 'Create an invite link for members to join.',
        'allowAnyEmail' => 'Allow any email address',
        'onlyAllow' => 'Only allow email addresses with domain ',
        'message' => 'Add a message (optional)',
        'exEmployee' => 'Ex employee',
        'dateOfBirth' => 'Date of Birth',
        'reportingTo' => 'Reporting To',
        'reportingTeam' => 'Reporting Team',
        'probationEndDate' => 'Probation End Date',
        'noticePeriodStartDate' => 'Notice Period Start Date',
        'noticePeriodEndDate' => 'Notice Period End Date',
        'internshipEndDate' => 'Internship End Date',
        'contractEndDate' => 'Contract End Date',
        'maritalStatus' => 'Marital Status',
        'marriageAnniversaryDate' => 'Marriage Anniversary Date',
        'employmentType' => 'Employment Type',
        'immigration' => 'Immigration',
        'passportDetails' => 'Passport Details',
        'passportNumber' => 'Passport Number',
        'visaNumber' => 'Visa Number',
        'issueDate' => 'Issue Date',
        'expiryDate' => 'Expiry Date',
        'scanCopy' => 'Scan Copy',
        'visaDetails' => 'Visa Details',
        'full_time' => 'Full Time',
        'part_time' => 'Part Time',
        'on_contract' => 'On Contract',
        'internship' => 'Internship',
        'trainee' => 'Trainee',
    ),
    'projects' => array(
        'addNewProject' => 'Add New Project',
        'projectName' => 'Project Name',
        'projectMembers' => 'Project Members',
        'createTitle' => 'Add Project',
        'selectClient' => 'Select Client',
        'startDate' => 'Start Date',
        'deadline' => 'Deadline',
        'projectSummary' => 'Project Summary',
        'projectDetails' => 'Project Details',
        'updateTitle' => 'Update Project Details',
        'projectCategory' => 'Project Category',
        'manageProjectCategory' => 'Manage Category',
        'clientFeedback' => 'Client Feedback',
        'projectCompletionStatus' => 'Project Completion Status',
        'overview' => 'Overview',
        'members' => 'Members',
        'files' => 'Files',
        'activeTimers' => 'Active Timers',
        'whoWorking' => 'Who\'s Working',
        'activeSince' => 'Active Since',
        'openTasks' => 'Open Tasks',
        'daysLeft' => 'Days Left',
        'hoursLogged' => 'Hours Logged',
        'issuesPending' => 'Issues Pending',
        'activityTimeline' => 'Activity Timeline',
        'addMemberTitle' => 'Add Project Members',
        'uploadFile' => 'Upload File',
        'dropFile' => 'Drop files here OR click to upload',
        'updateSuccess' => ' project details updated.',
        'calculateTasksProgress' => 'Calculate progress through tasks',
        'viewGanttChart' => 'Gantt Chart',
        'clientViewTask' => 'Client can manage tasks of this project',
        'manualTimelog' => 'Allow manual time logs',
        'clientTaskNotification' => 'Send task notification to client',
        'selectPayment' => 'The payment gateway is required when payment status is Enable',
        'allProject' => 'All Projects',
        'withoutDeadline' => 'There is no project deadline',
        'pause' => 'Pause',
        'resume' => 'Resume',
        'cancel' => 'Cancel',
        'activate' => 'Activate',
        'projectInfo' => 'Project Info',
        'clientInfo' => 'Client Info',
        'budgetInfo' => 'Budget Info',
        'projectBudget' => 'Project Budget',
        'hours_allocated' => 'Hours Estimate (In Hours)',
        'milestones' => 'Milestones',
        'createMilestone' => 'Create Milestone',
        'editMilestone' => 'Edit Milestone',
        'milestoneCost' => 'Milestone Cost',
        'milestoneTitle' => 'Milestone Title',
        'milestoneSummary' => 'Milestone Summary',
        'milestoneStartDate' => 'Milestone Start Date',
        'milestoneEndDate' => 'Milestone End Date',
        'projectEarningInfo' => 'Calculated from payments module',
        'otherInfo' => 'Other Info',
        'expenses_total' => 'Expenses',
        'projectExpenseInfo' => 'Calculated from expenses module',
        'addFileLink' => 'Add file link',
        'selfAssignAsProjectMember' => 'Add me as a project member',
        'viewPublicGanttChart' => 'Public Gantt Chart',
        'burndownChart' => 'Burndown Chart',
        'fileName' => 'File name',
        'discussion' => 'Discussion',
        'rating' => 'Rating',
        'addCostProjectBudget' => 'Add Cost To Project Budget',
        'chooseMembers' => 'Choose Members',
        'chooseDepartment' => 'Choose Department',
        'hideFinishedProjects' => 'Hide Finished Projects',
        'projectProgress' => 'Project Progress',
        'note' => 'Notes',
        'visibleRatingToMembers' => 'Visible Rating to Members',
        'noRatingAvailable' => 'No Rating Available',
        'createPublicProject' => 'Create Public Project',
        'createPrivateProject' => 'Change To Private Project',
        'changeToPublicProject' => 'Change To Public Project',
        'projectAdminInfo' => 'Project Admin can add project members, tasks, discussions, notes, files, milestones',
        'enableMiroboard' => 'Enable Miroboard',
        'miroBoardId' => 'Miro Board ID',
        'clientMiroAccess' => 'Client Can Access Miro ',
        'projectClient' => 'Project Client Details ',
        'projectDoNotHaveClient' => 'This project does not contain any client',
        'projectStatusSettings' => 'Project Status Settings',
        'sameAssignee' => 'Copy the same assignees',
        'profit' => 'Profit',
    ),
    'tasks' => array(
        'noSubTaskFound' => 'No Sub Task Found',
        'selectProject' => 'Select Project',
        'hideCompletedTask' => 'Hide completed task',
        'newTask' => 'New Task',
        'myTask' => 'My Tasks',
        'changeStatus' => 'Change Status',
        'lastCreated' => 'Last Created',
        'dueSoon' => 'Due Soon',
        'dueDate' => 'Due Date',
        'assignTo' => 'Assigned To',
        'high' => 'High',
        'medium' => 'Medium',
        'low' => 'Low',
        'priority' => 'Priority',
        'selectPriority' => 'Select Priority',
        'updateTask' => 'Update Task',
        'chooseAssignee' => 'Choose Assignee',
        'taskDetail' => 'Task Detail',
        'taskBoard' => 'Task Board',
        'addBoardColumn' => 'Add Status Column',
        'boardColumn' => 'Board Column',
        'columnName' => 'Column Name',
        'labelColor' => 'Label Color',
        'tasksTable' => 'Tasks Table',
        'position' => 'Board Column Position',
        'subTask' => 'Sub Task',
        'comment' => 'Comment',
        'taskCategory' => 'Task category',
        'selectTaskCategory' => 'Select Task category',
        'noTaskCategory' => 'No Task category available',
        'category' => 'Category',
        'assignBy' => 'Assigned By',
        'markComplete' => 'Mark as complete',
        'markIncomplete' => 'Mark as incomplete',
        'reminder' => 'Send Reminder',
        'sectionVisibleClient' => 'Sections visible to client',
        'moveToBoard' => 'Move to Board',
        'deleteRecurringTasks' => 'Delete With Recurring Tasks',
        'dependent' => 'Task is dependent on another task',
        'dependentTask' => 'Dependent Task',
        'chooseTask' => 'Choose Task',
        'uplodedFiles' => 'Uploaded Files',
        'cyclesToolTip' => 'Number of times to repeat',
        'preDeadlineReminder' => 'Send task reminder <strong>before</strong> X days of due date',
        'onDeadlineReminder' => 'Send task reminder on the day of due date',
        'postDeadlineReminder' => 'Send task reminder <strong>after</strong> X days of due date',
        'makePrivate' => 'Make Private',
        'privateInfo' => 'Private tasks are only visible to admin, assignor ,and assignee.',
        'createActivity' => 'Task is created by',
        'updateActivity' => 'Task details are updated by ',
        'statusActivity' => 'Task status changed by ',
        'commentActivity' => 'Comment added by ',
        'fileActivity' => 'File is uploaded by ',
        'subTaskCreateActivity' => 'Sub task is created by ',
        'subTaskUpdateActivity' => 'Sub task is updated by ',
        'history' => 'History',
        'defaultTaskStatus' => 'Default Task Status',
        'billable' => 'Billable',
        'billableInfo' => 'Invoice can be generated for this task\'s time log.',
        'assigned' => 'Assigned',
        'taskLabel' => 'Task Label',
        'assignMe' => 'Assign to me',
        'setTimeEstimate' => 'Time estimate',
        'users' => 'Users',
        'taskInfo' => 'Task Info',
        'loadMore' => 'Load More',
        'taskboardDefaultLength' => 'Taskboard Default Length',
        'timerStartedTask' => 'Started the timer for task ',
        'timerStartedBy' => 'Timer started',
        'timerStartedProject' => 'Started the timer for the project ',
        'timerStoppedBy' => 'Timer stopped',
        'copyTaskLink' => 'Copy Task Link',
        'timerPausedBy' => 'Timer paused',
        'unassigned' => 'Unassigned',
        'like' => 'Like',
        'dislike' => 'Dislike',
        'you' => 'You',
        'likeUser' => ':user reacted with thumbs up',
        'dislikeUser' => ':user reacted with thumbs down',
        'repeatInfo' => 'Task will auto-create after every X days.',
        'leaveMessage' => 'One or more assignees are on leave on selected dates.',
        'leaveOn' => 'is on leave',
        'editSubTask' => 'Edit Sub Task',
        'notFinishedProjects' => 'Showing only open projects whose status is not finished'
    ),
    'invoices' => array(
        'addInvoice' => 'Create Invoice',
        'receivedPayment' => 'I have received the payment',
        'paid' => 'Paid',
        'unpaid' => 'Unpaid',
        'pending' => 'Pending',
        'dueDate' => 'Due Date',
        'on-hold' => 'On Hold',
        'failed' => 'Failed',
        'processing' => 'Processing',
        'completed' => 'Completed',
        'refunded' => 'Refunded',
        'currency' => 'Currency',
        'invoiceDate' => 'Invoice Date',
        'projectName' => 'Project Name',
        'item' => 'Item',
        'qty' => 'Quantity',
        'unitPrice' => 'Unit Price',
        'amount' => 'Amount',
        'addItem' => 'Add Item',
        'subTotal' => 'Sub Total',
        'discount' => 'Discount',
        'tax' => 'Tax',
        'total' => 'Total',
        'billedTo' => 'Billed To',
        'billedFrom' => 'Billed From',
        'generatedBy' => 'Generated By',
        'price' => 'Price',
        'type' => 'Type',
        'payPaypal' => 'Pay via Paypal',
        'payPaystack' => 'Pay via Paystack',
        'payFlutterwave' => 'Pay via Flutterwave',
        'payMollie' => 'Pay via Mollie',
        'payPayfast' => 'Pay via Payfast',
        'payAuthorize' => 'Pay via Authorize',
        'paySquare' => 'Pay via Square',
        'downloadPdf' => 'Download Pdf',
        'isRecurringPayment' => 'Is it a recurring payment?',
        'billingCycle' => 'Billing Cycle',
        'billingFrequency' => 'Billing Frequency',
        'billingInterval' => 'Billing Interval',
        'recurringPayments' => 'Recurring Payment',
        'recurringInvoiceInfo' => 'Recurring Invoice Info',
        'payNow' => 'Pay Now',
        'payStripe' => 'Pay via Stripe',
        'taxName' => 'Tax Name',
        'rate' => 'Rate',
        'payOffline' => 'Pay Offline',
        'partial' => 'Partially Paid',
        'due' => 'Due',
        'uploadInvoice' => 'Upload Invoice',
        'project' => 'Project',
        'payRazorpay' => 'Pay via Razorpay',
        'copyPaymentLink' => 'Copy Payment Link',
        'appliedCredits' => 'Applied Credits',
        'amountDue' => 'Amount Due',
        'amountPaid' => 'Amount Paid',
        'markCancel' => 'Mark as Canceled',
        'showShippingAddress' => 'Show Shipping Address',
        'showShippingAddressInfo' => 'Show Shipping Address in invoices',
        'notSent' => 'Not Sent',
        'draft' => 'Draft',
        'buy' => 'Buy',
        'infinite' => 'For Infinite Expenses',
        'assignMe' => 'Assign to me',
        'totalUnpaidInvoice' => 'Total Unpaid Invoices',
        'to' => 'To',
        'paymentMethod' => 'Payment Method',
        'paidOn' => 'Paid on',
        'invoiceNumber' => 'Invoice Number',
        'billingAddress' => 'Billing Address',
        'shippingAddress' => 'Shipping Address',
        'note' => 'note for the recipient',
        'placeOrder' => 'Place Order',
        'cardInfo' => 'Card Info',
        'canceled' => 'Canceled',
        'calculateTax' => 'Calculate Tax',
        'afterDiscount' => 'After Discount',
        'beforeDiscount' => 'Before Discount',
        'unitType' => 'Unit Type',
        'noOfBillingCycle' => 'No. of billing cycles to be charged (set -1 for infinite cycles)',
        'totalCount' => 'Total Count',
        'customerCharged' => 'Customer will be charged',
        'description' => 'Description',
        'invoiceValue' => 'Invoice Value',
        'taxableValue' => 'Taxable Value',
        'invoiceBalanceDue' => 'Invoice Balance Due',
        'editTax' => 'Edit Tax',
        'paymentDescription' => 'Payment Description',
        'sameIp' => 'It\'s the same IP which you have.',
        'startDate' => 'Start Date',
    ),
    'issues' => array(
        'pending' => 'Pending',
        'addIssue' => 'Add Issue',
        'updateIssue' => 'Update Issue',
        'resolved' => 'Resolved',
        'markPending' => 'Mark Pending',
        'markResolved' => 'Mark Resolved',
        'reportedOn' => 'Reported On',
    ),
    'timeLogs' => array(
        'whoLogged' => 'Who Logged',
        'startTime' => 'Start Time',
        'endTime' => 'End Time',
        'totalHours' => 'Total Hours',
        'totalMinutes' => 'Total Minutes',
        'memo' => 'Memo',
        'lastUpdatedBy' => 'Last updated by',
        'employeeName' => 'Employee Name',
        'startDate' => 'Start Date',
        'endDate' => 'End Date',
        'logTime' => 'Log Time',
        'startTimer' => 'Start Timer',
        'stopTimer' => 'Stop Timer',
        'selectProject' => 'Select Project',
        'selectTask' => 'Select Task',
        'task' => 'Task',
        'whenLogged' => 'when Logged',
        'timeLogFrom' => 'Time Log From',
        'timeLogTo' => 'Time Log To',
        'myActiveTimer' => 'My Active Timer',
        'pauseTimer' => 'Pause Timer',
        'resumeTimer' => 'Resume Timer',
        'paused' => 'Paused',
        'break' => 'Break',
        'thisWeek' => 'This Week',
        'editBreak' => 'Edit Break',
        'totalTime' => 'Total Time',
    ),
    'taskCalendar' => array(
        'note' => 'Calendar shows the due tasks on their due dates.',
        'taskDetail' => 'Task Detail',
    ),
    'notices' => array(
        'addNotice' => 'Add New Notice',
        'notice' => 'Notice',
        'noticeHeading' => 'Notice Heading',
        'noticeDetails' => 'Notice Details',
        'updateNotice' => 'Update Notice',
        'toEmployee' => 'To Employees',
        'toClients' => 'To Clients',
    ),
    'knowledgeBase' => array(
        'addknowledgebase' => 'Add New Article',
        'knowledgeDetails' => 'Article Details',
        'knowledgeDesc' => 'Description',
        'knowledgeHeading' => 'Article Heading',
        'knowledgeCategory' => 'Article Category',
        'knowledge' => 'Knowledge',
        'knowledgebase' => 'Knowledge Base',
        'updateknowledge' => 'Update Article',
        'toEmployee' => 'For Employees',
        'toClients' => 'For Clients',
        'uploadFile' => 'Upload File',
    ),
    'sticky' => array(
        'addNote' => 'Add Note',
        'lastUpdated' => 'Updated',
        'colors' => 'Color Code',
    ),
    'taskReport' => array(
        'taskToComplete' => 'Total Tasks',
        'completedTasks' => 'Completed Tasks',
        'pendingTasks' => 'Pending Tasks',
        'chartTitle' => 'Pie Chart',
    ),
    'leaveReport' => array(
        'leaveReport' => 'Leave Report',
    ),
    'timeLogReport' => array(
        'chartTitle' => 'Time Log Bar Chart',
    ),
    'financeReport' => array(
        'showAmountIn' => 'Show amount in ',
        'selectCurrency' => 'Select Currency',
        'chartTitle' => 'Earnings Bar Chart',
        'financeReport' => 'Earnings Bar Chart',
        'noteText' => 'The earnings are calculated with the latest exchange rate for different currencies.',
    ),
    'accountSettings' => array(
        'updateTitle' => 'Update Settings',
        'appName' => 'App Name',
        'companyName' => 'Company Name',
        'companyEmail' => 'Company Email',
        'companyPhone' => 'Company Phone',
        'companyWebsite' => 'Company Website',
        'companyLogo' => 'Company Logo',
        'darkCompanyLogo' => 'Dark Mode Logo',
        'lightCompanyLogo' => 'Light Mode Logo',
        'companyAddress' => 'Company Address',
        'defaultTimezone' => 'Default Timezone',
        'defaultCurrency' => 'Default Currency',
        'changeLanguage' => 'Change Language',
        'language' => 'Language',
        'uploadLogo' => 'Upload your logo',
        'getLocation' => 'Set current location',
        'dateFormat' => 'Date Format',
        'timeFormat' => 'Time Format',
        'currencyConverterKey' => 'Currency converter key',
        'google_map_key' => 'Google map key',
        'weatherKey' => 'Weather Key',
        'appDebugInfo' => 'This determines how much information about an error is actually displayed to the user.  ',
        'appDebug' => 'App Debug',
        'googleRecaptcha' => 'Google Recaptcha',
        'googleRecaptchaInfo' => 'Show google recaptcha on the login page.',
        'googleRecaptchaKey' => 'Google Recaptcha Key',
        'googleRecaptchaSecret' => 'Google Recaptcha Secret',
        'sendReminder' => 'Send Reminder',
        'sendReminderInfo' => 'Remind project members about the due date of projects.',
        'updateEnableDisable' => 'App Update',
        'updateEnableDisableTest' => 'This will hide or show the new update message on the dashboard and hide/show the <b>Update Log</b> menu from settings',
        'latitude' => 'Latitude',
        'longitude' => 'Longitude',
        'dashboardClock' => 'Dashboard Clock',
        'showDashboardClock' => 'Show clock on the dashboard page.',
        'clearCache' => 'Clear Cache',
        'currencyFormat' => 'Currency Format',
        'currencyFormatSetting' => 'Currency Format Settings',
        'currencyFormatSettingTooltip' => 'We have taken 1000 as an example to show currency format',
        'currencySetting' => 'Currency Settings',
        'numberOfdecimals' => 'Number of Decimals',
        'accountSetupInfo' => 'Setup your admin account. This can be changed later.',
        'faviconImage' => 'Favicon Image',
        'setupProgress' => 'Setup Progress',
        'sessionDriver' => 'Session Driver',
        'sessionFile' => 'File',
        'sessionDatabase' => 'Database',
        'sessionInfo' => 'This option controls the session "driver" that will be used on requests. Database driver gives you more control. <br><em>* Changing the driver will make you logout.</em>',
        'deleteSessions' => 'Delete Sessions',
        'allowClientSignup' => 'Allow Client Signup',
        'allowClientSignupPopUp' => 'Allowing it will show the sign up button on the login page for the clients to get themselves register',
        'needClientSignupApprovalPopUp' => 'If you want a newly registered client should be logged in to the system only after it gets approved by the admin then enable this. Disabling it means the client can logging without approval',
        'needClientSignupApproval' => 'Need admin approval after client signup',
        'fileUploadSetting' => 'File Upload Settings',
        'allowedFileType' => 'Allowed file types for upload',
        'allowedFileSize' => 'Max File size for upload',
        'commaSeparatedValues' => 'Add comma (,) separated values.',
        'generateCredentials' => 'Generate Credentials.',
        'autocompleteSearch' => 'Autocomplete Search',
        'businessMapLocation' => 'Business Location on Map',
        'yearStartsFrom' => 'Year Starts from',
        'appLanguageInfo' => 'This will be the default language of the application for every user. This can be changed by the user in profile settings.',
        'datatableRowLimit' => 'Datatable Row Limit',
        'datatableRowLimitPopover' => 'Set the default row limit for all tables',
        'maxNumberOfFiles' => 'Max number of files for upload',
        'appCurrencyInfo' => 'When you change the currency you may have to update the exchange rates for the other currencies in currency settings and previous payments will calculate as per old currency exchange rates in finance report.',
        'chooseGoogleRecaptcha' => 'Choose Google Recaptcha Version',
    ),
    'profile' => array(
        'updateTitle' => 'Update Profile Info',
        'yourName' => 'Your Name',
        'yourEmail' => 'Your Email',
        'yourPassword' => 'Your Password',
        'passwordNote' => 'Leave blank to keep your current password.',
        'yourMobileNumber' => 'Your Mobile Number',
        'yourAddress' => 'Your Address',
        'profilePicture' => 'Profile Picture',
        'uploadPicture' => 'Upload your picture',
        'companyLogo' => 'Company Logo',
        'productimage' => 'Product Image',
    ),
    'emailSettings' => array(
        'notificationTitle' => 'Email Notification Settings',
        'notificationSubtitle' => 'Select the events for which an email should be sent to user.',
        'configTitle' => 'Mail Configuration',
        'mailDriver' => 'Mail Driver',
        'mailHost' => 'Mail Host',
        'mailPort' => 'Mail Port',
        'mailUsername' => 'Mail Username',
        'mailPassword' => 'Mail Password',
        'mailFrom' => 'Mail From Name',
        'mailEncryption' => 'Mail Encryption',
        'userRegistration' => 'User Registration/Added by Admin',
        'employeeAssign' => 'Employee Assign to Project',
        'newNotice' => 'New Notice Published',
        'taskAssign' => 'User Assign to Task',
        'expenseAdded' => 'New Expense (Added by Admin)',
        'expenseMember' => 'New Expense (Added by Member)',
        'expenseStatus' => 'Expense Status Changed',
        'ticketRequest' => 'New Support Ticket Request',
        'mailFromEmail' => 'Mail From Email',
        'leaveRequest' => 'Leave Request Received',
        'taskComplete' => 'Task completed',
        'sendTestEmail' => 'Send Test Email',
        'removeImage' => 'Remove Image',
        'invoiceNotification' => 'Invoice Notifications',
        'emailNotifications' => 'Receive email notifications?',
        'user-registrationadded-by-admin' => 'User Registration/Added by Admin',
        'employee-assign-to-project' => 'Employee Assign to Project',
        'new-notice-published' => 'New Notice Published',
        'user-assign-to-task' => 'User Assign to Task',
        'new-expenseadded-by-admin' => 'New Expense (Added by Admin)',
        'new-expenseadded-by-member' => 'New Expense (Added by Member)',
        'expense-status-changed' => 'Expense Status Changed',
        'new-support-ticket-request' => 'New Support Ticket Request',
        'new-leave-application' => 'Leave Request Received',
        'task-completed' => 'Task completed',
        'invoice-createupdate-notification' => 'Invoice Notifications',
        'discussion-reply' => 'Discussion Replies',
        'mailConnection' => 'Enable Email Queue',
        'mailConnectionInfo' => '<p>To speed up the emailing process, the system will add the emails in queue and will send them via cron job.</p>  <p> Choose <u>No</u> to send email immediately <strong>(Slower)</strong>.</p><p>Choose <u>Yes</u> to send emails in background <strong>(Faster)</strong>.</p><p><em>*Make sure the cron job is configured properly to use email queueing.</em></p>',
        'emailVerified' => 'Email Verified',
        'emailVerifiedInfo' => "Emails from companies are sent from the company's email address. In the case of <strong>AWS SES, ZOHO, and OFFICE365</strong>, emails are not sent from unverified senders. Therefore, to enable emails to be sent directly from the Mail From Email address, you need to select <strong>Yes</strong> here.",
    ),
    'moduleSettings' => array(
        'employeeModuleTitle' => 'Modules',
        'clientModuleTitle' => 'Client Module Title',
        'employeeSubTitle' => 'Select the modules which you want to enable.',
        'clientSubTitle' => 'Select the modules which client can access.',
        'moduleSetting' => 'Module Settings',
        'section' => 'section.',
        'verifyPurchase' => 'Verify Your Purchase',
        'contactAdmin' => 'Contact your admin if you are not the admin to verify the purchase.',
        'findPurchaseCode' => 'Click this link to find your purchase code.',
        'step1' => 'Step 1',
        'step2' => 'Step 2',
    ),
    'currencySettings' => array(
        'addNewCurrency' => 'Add New Currency',
        'currencyName' => 'Currency Name',
        'currencySymbol' => 'Currency Symbol',
        'currencyCode' => 'Currency Code',
        'currencies' => 'Currencies',
        'updateTitle' => 'Update Currency',
        'exchangeRate' => 'Exchange Rate',
        'cantDeleteDefault' => 'Cannot delete default currency.',
        'isCryptoCurrency' => 'Is Cryptocurrency',
        'usdPrice' => 'USD Price',
        'usdPriceInfo' => 'Required to calculate earnings.',
        'fetchLatestExchangeRate' => 'Fetch latest exchange rate.',
        'currencyPosition' => 'Currency Position',
        'thousandSeparator' => 'Thousand Separator',
        'decimalSeparator' => 'Decimal Separator',
        'noOfDecimals' => 'Number Of Decimals',
        'sample' => 'Example',
        'left' => 'Left',
        'right' => 'Right',
        'leftWithSpace' => 'Left With Space',
        'rightWithSpace' => 'Right With Space',
    ),
    'customLinkSettings' => array(
        'linkTitle' => 'Link Title',
        'url' => 'URL',
        'status' => 'Status',
        'addNewCustomLink' => 'Add New Custom Link',
        'canBeViewedBy' => 'Can Be Viewed By',
        'editCustomLink' => 'Edit Custom Link'
    ),
    'messages' => array(
        'startConversation' => 'New Conversation',
        'chooseMember' => 'Choose Member',
        'message' => 'Message',
        'send' => 'Send',
        'sendTo' => 'Send To',
        'searchContact' => 'Type to search contact',
        'typeMessage' => 'Type your message here...',
        'chooseAdmin' => 'Choose Admin',
        'allowClientEmployeeChat' => 'Allow chat between client and employees?',
        'allowClientAdminChat' => 'Allow chat between client and admin?',
        'admins' => 'Administrators',
        'members' => 'Project Members',
        'typing' => 'typing',
        'allowClientProjectEmployeeChat' => 'Only project members can chat with client',
        'sendSoundNotification' => 'Send Sound Notification Alert',
        'soundNotificationInfo' => 'Every 10 seconds application will check for new messgaes.',
    ),
    'taskDetail' => 'Task Detail',
    'themeSettings' => array(
        'adminPanelTheme' => 'Admin Panel Theme',
        'projectAdminPanelTheme' => 'Project Admin Panel Theme',
        'employeePanelTheme' => 'Employee Panel Theme',
        'clientPanelTheme' => 'Client Panel Theme',
        'headerColor' => 'Primary Color',
        'sidebarColor' => 'Sidebar Background',
        'sidebarTextColor' => 'Sidebar Text Color',
        'linkColor' => 'Sidebar Active Color',
        'loginScreenBackground' => 'Login Screen Background Image',
        'uploadImage' => 'Upload Image',
        'customCss' => 'Custom CSS',
        'useDefaultTheme' => 'Use Default Theme',
        'useCustomTheme' => 'Use Custom Theme',
        'enableRoundTheme' => 'Enable rounded theme?',
        'loginLogoBackgroundColor' => 'Login Screen Logo\'s background Color',
        'sidebarTheme' => 'Sidebar Theme',
        'dark' => 'Dark',
        'light' => 'Light',
        'authTheme' => 'Public Pages Theme',
        'authThemeInfo' => 'Theme for Login, Register and other public pages.',
        'logoSize' => 'Recommended size 250 X 250 (Pixels)',
        'loginBackgroundSize' => 'Recommended size: 1500 X 1056 (Pixels)',
        'faviconSize' => 'Recommended size: 16 X 16 (Pixels)',
        'sidebarBrandingStyle' => 'Sidebar Branding Style',
        'selectBrandingStyle' => 'Select Branding Style',
        'loginLogoTextColor' => 'Login Screen Logo\'s text Color.',
        'loginLogoTextColorInfo' => '<strong>Dark:</strong> will show logo text in black.<br><br><strong>Light:</strong> will show logo text in White.',
    ),
    'estimates' => array(
        'createEstimate' => 'Create Estimate',
        'validTill' => 'Valid Till',
        'waiting' => 'Waiting',
        'accepted' => 'Accepted',
        'declined' => 'Declined',
        'updateEstimate' => 'Update Estimate',
        'convertEstimateTitle' => 'Convert Estimate To Invoice',
        'convertInvoiceTitle' => 'CONVERT INVOICE TO CREDIT NOTE',
        'estimatesNumber' => 'Estimate Number',
        'signatureAndConfirmation' => 'Signature & Confirmation Of Identity',
        'cpatureAndConfirmation' => 'Signature & Confirmation Of Identity',
        'firstName' => 'First Name',
        'lastName' => 'Last Name',
        'signedBy' => 'Signed By',
        'undo' => 'Undo',
        'clear' => 'Clear',
        'duplicateEstimate' => 'Duplicate Estimate',
        'estimateTo' => 'Estimate To:',
        'createDate' => 'Create Date:',
        'item' => 'Item',
        'price' => 'Price',
        'qty' => 'Qty',
        'total' => 'Total',
        'address' => 'Address:',
        'subtotal' => 'Subtotal',
        'discount' => 'Discount',
        'notes' => 'Notes',
        'sendEstimate' => 'Send Estimate',
        'draft' => 'Draft',
        'canceled' => 'Canceled',
        'copyLink' => 'Copy Public Link',
        'uploadSignature' => 'Upload Signature',
        'viewLink' => 'View Public Link',
        'estimateTemplate' => 'Estimate Template',
        'addEstimateTemplate' => 'Add Estimate Template',
        'createestimateTemplate' => 'Create Estimate Template',
        'updateEstimateTemplate' => 'Update EstimateTemplate',
        'estimateTemplates' => 'ESTIMATE TEMPLATE',
        'companysignature' => 'Company Signature',
        'clientsignature' => 'Client Signature',
        'signature' => 'Signature',
    ),
    'payments' => array(
        'addPayment' => 'Add Payment',
        'paidOn' => 'Paid On',
        'selectInvoice' => 'Select Invoice',
        'paymentGateway' => 'Payment Gateway',
        'transactionId' => 'Transaction Id',
        'updatePayment' => 'Update Payment',
        'paypalStatus' => 'Paypal Status',
        'markInvoicePaid' => 'Mark Invoice Paid?',
        'stripeStatus' => 'Stripe Status',
        'import' => 'Import CSV',
        'firstCharacter' => 'First Character is Currency?',
        'remark' => 'Remark',
        'amount' => 'Amount',
        'totalAmount' => 'Total Amount',
        'totalPaid' => 'Total Paid',
        'totalDue' => 'Total Due',
        'paymentDetailNotFound' => 'Payment details not found.',
        'paymentDetails' => 'Payment details',
        'paymentLink' => 'View Payment Page',
        'razorpayStatus' => 'Razorpay Status',
        'razorpayWebhookSecret' => 'Razorpay Webhook Secret',
        'payStack' => 'Paystack',
        'paystackKey' => 'Paystack Public Key',
        'paystackStatus' => 'Paystack Status',
        'PaystackSecretKey' => 'Paystack Secret Key',
        'paystackMerchantEmail' => 'Paystack Merchant Email',
        'flutterwave' => 'Flutterwave',
        'flutterwaveKey' => 'Flutterwave Public Key',
        'flutterwaveStatus' => 'Flutterwave Status',
        'flutterwaveSecretKey' => 'Flutterwave Secret Key',
        'flutterwaveSecretHash' => 'Flutterwave Secret Hash',
        'flutterwaveWebhookSecretHash' => 'Flutterwave Webhook Secret Hash',
        'mollieKey' => 'Mollie Key',
        'mollieStatus' => 'Mollie Status',
        'merchantId' => 'Payfast Merchant ID',
        'merchantKey' => 'Payfast Merchant Key',
        'merchantPassphrase' => 'Payfast Passphrase',
        'testMerchantId' => 'Test Payfast Merchant ID',
        'testMerchantKey' => 'Test Payfast Merchant Key',
        'testMerchantPassphrase' => 'Test Payfast Passphrase',
        'payfastStatus' => 'Payfast Status',
        'authorizeStatus' => 'Authorize Status',
        'authorizeApiLoginId' => 'Authorize Api Login Id',
        'authorizeTransactionKey' => 'Authorize Transaction Key',
        'squareStatus' => 'Square Status',
        'squareApplicationId' => 'Square Application Id',
        'squareLocationId' => 'Square Location Id',
        'squareAccessToken' => 'Square Access Token',
        'amountInWords' => 'Amount received in words',
        'offlinePaymentMethod' => 'Offline Payment Methods',
        'selectPaymentMethod' => 'Select Payment Method',
        'selectOfflineMethod' => 'Select Offline Method',
        'filterByCustomer' => 'Filter invoices by client',
        'paymentDateMessage' => 'Payment date required.',
        'transactionIdMsg' => 'Transaction id required.',
        'offlineMethodMsg' => 'Select offline method',
        'amountReceived' => 'Amount Received',
        'paymentDate' => 'Payment Date',
        'addBulkPayment' => 'Add Bulk Payment',
    ),
    'projectCategory' => array(
        'addProjectCategory' => 'Add Project Category',
        'categoryName' => 'Category Name',
        'editProjectCategory' => 'Edit Project Category',
    ),
    'paystack' => array(
        'client_name' => 'Name',
        'client_email' => 'Email',
        'details' => 'Paystack Details',
    ),
    'flutterwave' => array(
        'client_name' => 'Name',
        'client_email' => 'Email',
        'client_phone' => 'Phone',
        'details' => 'Flutterwave Details',
        'somethingWentWrong' => 'Something went wrong please try again later.',
    ),
    'mollie' => array(
        'client_name' => 'Name',
        'client_email' => 'Email',
        'details' => 'Mollie Details',
    ),
    'payfast' => array(
        'client_name' => 'Name',
        'client_email' => 'Email',
        'details' => 'Payfast Details',
        'redirectMessage' => 'You will redirect to Payfast payment page.',
    ),
    'authorize' => array(
        'details' => 'Authorize Payment',
        'nameOnCard' => 'Name on Card',
        'cardNumber' => 'Card Number',
        'cvv' => 'CVV',
        'expMonth' => 'Expiry Month',
        'expYear' => 'Expiry Year',
        'errorMessage' => 'There were some issues with the payment. Please try again later.',
        'errorNoResponse' => 'No response returned',
    ),
    'square' => array(
        'details' => 'Square Payment',
        'redirectMessage' => 'You will redirect to Square payment page.',
    ),
    'expenses' => array(
        'addExpense' => 'Add Expense',
        'editExpense' => 'Edit Expense',
        'itemName' => 'Item Name',
        'purchaseDate' => 'Purchase Date',
        'purchaseFrom' => 'Purchased From',
        'updateExpense' => 'Update Expense',
        'infinite' => 'For Infinite Expenses',
        'expenseCategory' => 'Expense Category',
        'attachBill' => 'Attach Bill',
        'removeBill' => 'Remove Bill',
        'approvedBy' => 'Approved By',
        'payrollExpenseReport' => 'Payroll Expense Report',
        'expenseBill' => 'Expense Bill'
    ),
    'expensesRecurring' => array(
        'addExpense' => 'Add Recurring Expense',
        'itemName' => 'Item Name',
        'purchaseDate' => 'Purchase Date',
        'purchaseFrom' => 'Purchased From',
        'updateExpense' => 'Update Expense',
        'infinite' => 'For Infinite Expenses',
        'created_at' => 'Created On',
        'dayOfWeek' => 'Day Of Week',
        'dayOfMonth' => 'Day Of Month',
        'lastPaymentDate' => 'Last Payment Date',
        'immediateExpense' => 'Immediate start ( Expense will generate from now )',
        'nextExpense' => 'Next Expense',
        'nextExpenseDate' => 'Next Expense Date will be',
        'currentExpenseDate' => 'First Expense will be generated on',
        'expenseGenerated' => 'The expense will be generated',
        'completedTotalExpense' => 'Completed/Total Expense',
        'firstExpenseDate' => 'First Expense Date',
    ),
    'invoiceSettings' => array(
        'invoicePrefix' => 'Invoice Prefix',
        'template' => 'Template',
        'dueAfter' => 'Due after',
        'invoiceTerms' => 'Terms and Conditions',
        'updateTitle' => 'Update Finance Settings',
        'invoiceDigit' => 'Invoice Number Digits',
        'invoiceLookLike' => 'Invoice Number Example',
        'estimatePrefix' => 'Estimate Prefix',
        'estimateDigit' => 'Estimate Number Digits',
        'estimateLookLike' => 'Estimate Number Example',
        'credit_notePrefix' => 'Credit Note Prefix',
        'credit_noteDigit' => 'Credit Note Digits',
        'credit_noteLookLike' => 'Credit Note Number Example',
        'contractPrefix' => 'Contract Prefix',
        'orderPrefix' => 'Order Prefix',
        'contractDigit' => 'Contract Number Digits',
        'orderDigit' => 'Order Number Digits',
        'contractLookLike' => 'Contract Number Example',
        'orderLookLike' => 'Order Number Example',
        'logo' => 'Invoice Logo',
        'showFieldsInInvoice' => 'Client info to show on invoice',
        'invoiceNumberSeparator' => 'Invoice Number Separator',
        'estimateNumberSeparator' => 'Estimate Number Separator',
        'credit_noteNumberSeparator' => 'Credit Note Number Separator',
        'contractNumberSeparator' => 'Contract Number Separator',
        'orderNumberSeparator' => 'Order Number Separator',
        'authorisedSignatory' => 'Authorised Signatory',
        'authorisedSignatorySignature' => 'Authorised Signatory Signature',
        'syncType' => 'Sync Type',
        'syncTypeInfo' => '<strong>One Way Sync:</strong> If you create an invoice in this app then an invoice will be created on Quickbooks also.<br><br><strong>Two Way Sync:</strong> If you create an invoice in this app then an invoice will be created on Quickbooks. And when an invoice is created on Quickbooks then an invoice will be created in this app.',
        'oneWaySync' => 'One Way Sync',
        'twoWaySync' => 'Two Way Sync',
        'connectQuickBooks' => 'Connect Quickbooks Account. Without connecting quickbooks account Sync will not work.',
        'reauthorizeQuickBooks' => 'Reauthorize Quickbooks Account',
        'syncInfo' => 'It is only One-Way Sync. If you create an invoice or payment here then an invoice or payment will be created on Quickbooks too.',
        'quickbooksRedirectUrl' => 'Quickbooks Redirect URL',
        'addQuickbooksRedirectUrl' => 'Add this callback url in your quickbooks app settings.',
        'otherInfo' => 'Other information',
    ),
    'mobile' => array(
        'camera' => 'Camera',
        'gallery' => 'Gallery',
        'maximumFileSize' => 'Maximum File Size',
    ),
    'slackSettings' => array(
        'updateTitle' => 'Update Slack Settings',
        'uploadSlackLogo' => 'Upload Notification Logo',
        'notificationSubtitle' => 'Select the events for which a notification should be sent to user.',
        'sendTestNotification' => 'Send Test Notification',
        'slackWebhook' => 'Slack Webhook',
        'slackNotificationLogo' => 'Notification Logo',
        'notificationTitle' => 'Slack Notification Settings',
    ),
    'update' => array(
        'systemDetails' => 'System Details',
        'updateTitle' => 'Update To New Version',
        'updateDatabase' => 'Update Database',
        'fileReplaceAlert' => 'To update the worksuite to the new version check documentation for the instructions.',
        'updateDatabaseButton' => 'Click to update database',
        'newUpdate' => 'New update available',
        'updateNow' => 'Update Now',
        'updateAlternate' => 'If the <b>Update Now</b> button does not work then follow the <b> <a href="https://froiden.freshdesk.com/support/solutions/articles/43000554421-update-application-manually" target="_blank">Manual update</a></b> instructions as mentioned in the documentation.',
        'updateManual' => 'Update Alternate Method',
        'updateFiles' => 'Update Files',
        'install' => 'Install',
        'downloadUpdateFile' => 'Download Update File',
        'moduleFile' => 'Once the zip file is uploaded, you will see a list of modules available for installation or update. To proceed with the installation or update, simply click on the "install" button for the respective module. Please note that after clicking the "install" button, you will be logged out. Once the installation is complete, you will be able to see the module on the module list. You can activate or deactivate the module from the list at any time.',
    ),
    'incomeVsExpenseReport' => array(
        'totalIncome' => 'Total Income',
        'totalExpense' => 'Total Expense',
        'chartTitle' => 'Bar Chart',
    ),
    'tickets' => array(
        'ticketDetail' => 'Ticket Details',
        'agents' => 'Agents',
        'notAssigned' => 'Not assigned',
        'priority' => 'Priority',
        'selectPriority' => 'Select Priority',
        'newTicket' => 'New Ticket',
        'chooseAgents' => 'Choose Agents',
        'assignGroup' => 'Assign Group',
        'addGroup' => 'Add group',
        'group' => 'Group',
        'manageGroups' => 'Manage Groups',
        'groupName' => 'Group Name',
        'ticketType' => 'Ticket Type',
        'addType' => 'Add Type',
        'channelName' => 'Channel Name',
        'ticketChannel' => 'Ticket Channel',
        'template' => 'Template',
        'templateHeading' => 'Template Heading',
        'templateText' => 'Template Text',
        'addTicket' => 'Create Ticket',
        'ticket' => 'Ticket',
        'ticketSubject' => 'Ticket Subject',
        'ticketDescription' => 'Ticket Description',
        'applyTemplate' => 'Apply Template',
        'agent' => 'Agent',
        'tags' => 'Tags',
        'addChannel' => 'Add Channel',
        'requesterName' => 'Requester Name',
        'requester' => 'Requester',
        'reply' => 'Reply',
        'replies' => 'Replies',
        'totalTickets' => 'Total Tickets',
        'totalClosedTickets' => 'Closed Tickets',
        'totalOpenTickets' => 'Open Tickets',
        'totalPendingTickets' => 'Pending Tickets',
        'totalResolvedTickets' => 'Resolved Tickets',
        'requestedOn' => 'Requested On',
        'requestTicket' => 'Request Support Ticket',
        'closeTicket' => 'Close Ticket',
        'goToAgentDashboard' => 'Go To Agent Dashboard',
        'reopenTicket' => 'Reopen Ticket',
        'totalTicketInfo' => 'No. of new tickets which were created for the selected date range.',
        'closedTicketInfo' => 'No. of tickets which were closed in the selected date range.',
        'openTicketInfo' => 'No. of tickets which are not yet assigned to any agent and updated in the selected date range.',
        'pendingTicketInfo' => 'No. of tickets which were updated in the selected date range and are assigned to an agent.',
        'resolvedTicketInfo' => 'No. of tickets which were resolved in the selected date range but waiting for requester confirmation.',
        'completedProjects' => 'Completed Projects',
        'inProcessProjects' => 'In Process Projects',
        'overDueProjects' => 'Overdue Projects',
        'totalUnresolvedTickets' => 'Unresolved Tickets',
        'ticketTrendGraph' => 'Ticket trend graph',
        'urgent' => 'Urgent',
        'nofilter' => 'No filter',
        'submitOpen' => 'Submit as Open',
        'submitPending' => 'Submit as Pending',
        'submitResolved' => 'Submit as Resolved',
        'submitClosed' => 'Submit as Closed',
        'recentTickets' => 'Recent Tickets',
        'name' => 'Name',
        'email' => 'Email',
        'ticket_subject' => 'Ticket Subject',
        'ticket_description' => 'Ticket Description',
        'assign_group' => 'Assign Group',
        'type' => 'Type',
        'googleCaptcha' => 'Google Captcha',
        'message' => 'Message',
        'imapSettings' => 'IMAP Settings',
        'imapHost' => 'IMAP Host',
        'imapPort' => 'IMAP Port',
        'imapEncryption' => 'IMAP Encryption',
        'smtpSettings' => 'SMTP Settings',
        'syncIntervals' => 'Sync Interval',
        'addTicketChannel' => 'Add Ticket Channel',
        'activity' => array(
            'create' => 'Ticket created',
            'reply' => ':userName replied on ticket',
            'group' => ':groupName group assigned',
            'assign' => 'Assigned ticket to :userName',
            'priority' => 'Priority changed to :priority',
            'type' => 'Type changed to :type',
            'channel' => 'Channel changed to :channel',
            'status' => 'Status changed to :status',
            'tags' => 'Ticket tagged with :tags',
        ),
    ),
    'attendance' => array(
        'autoClockIn' => 'Auto clock-in employee by first sign in',
        'officeStartTime' => 'Shift Start Time',
        'officeEndTime' => 'Shift End Time',
        'halfDayMarkTime' => 'Half-day Mark Time',
        'lateMark' => 'Late mark after (minutes)',
        'allowSelfClock' => 'Allowed Employee self Clock-In/Clock-Out',
        'markAttendance' => 'Mark Attendance',
        'everyonePresent' => 'Everyone`s present today',
        'clock_in' => 'Clock In',
        'clockedIn' => 'Clocked In',
        'extraDays' => 'Extra Working Days',
        'late' => 'Late',
        'clock_out' => 'Clock Out',
        'clockedOut' => 'Clocked Out',
        'halfDay' => 'Half Day',
        'working_from' => 'Working From',
        'office' => 'Office',
        'home' => 'Home',
        'other' => 'Other',
        'otherPlace' => 'Other Locations',
        'workFrom' => 'Office, Home, etc.',
        'officeOpenDays' => 'Office opens on',
        'totalWorkingDays' => 'Working Days',
        'daysPresent' => 'Days Present',
        'absent' => 'Absent',
        'viewFullAttendance' => 'View Full Attendance',
        'present' => 'Present',
        'currentTime' => 'Current Time',
        'attendanceByDate' => 'Attendance By Date',
        'attendanceByMember' => 'Attendance by Member',
        'attendanceByHour' => 'Attendance by Hour',
        'attendanceByLocation' => 'Attendance by Location',
        'holiday' => 'Holiday',
        'holidays' => 'Holidays',
        'holidayfor' => 'Holiday for',
        'checkininday' => 'Maximum check-in allowed in a day',
        'maxClockin' => 'Maximum check-ins reached.',
        'attendanceDetail' => 'Attendance Detail',
        'yes' => 'Yes',
        'no' => 'No',
        'leave' => 'On Leave',
        'leaveFor' => 'Leave for',
        'checkForIp' => 'Clock-in check with added IP address',
        'checkForRadius' => 'Clock-in check with added location Radius',
        'radius' => 'Radius (in meter)',
        'ipAddress' => 'IP Address',
        'hoursClocked' => 'Hours Clocked',
        'notClockOut' => 'Did not clock out',
        'attendanceReminderStatus' => 'Attendance Reminder Status',
        'ReminderAfterMinutes' => 'Reminder After Minutes',
        'autoClockInDefualtLocation' => 'Defualt Location',
        'saveCurrentLocation' => 'Save Clock-In Location',
        'showOnMap' => 'Show on Map',
        'showClockIn' => 'Allow clock-in outside shift hours',
        'clock_in_ip' => 'Clock In IP',
        'clock_out_ip' => 'Clock Out IP',
        'shift' => 'Employee Shift',
        'shiftName' => 'Shift Name',
        'scheduleShifts' => 'Schedule Shifts',
        'weekStartFrom' => 'Week Starts From',
        'shiftShortCode' => 'Shift Short Code',
        'shiftSchedule' => 'Shift Schedule',
        'notScheduled' => 'Not Scheduled',
        'requestChange' => 'Request Change',
        'requestFor' => 'Request For',
        'allowShiftChange' => 'Allow employee to request shift change',
        'shiftChangeRequests' => 'Shift Change Requests',
        'bulkShiftAssign' => 'Assign Bulk Shifts',
        'assignShift' => 'Assign Shift',
        'sendEmail' => 'Send Email',
        'requestPending' => 'Request Pending',
        'sendMonthlyReport' => 'Send monthly attendance report email',
        'chooseRoleReport' => 'Choose roles for email report',
        'dayOff' => 'Day Off',
        'earlyClockIn' => 'Early Clock In (minutes)',
        'deleteRequestChange' => 'Delete Request Change'
    ),
    'customFields' => array(
        'label' => 'Field Label',
        'addField' => 'Add Field',
        'editField' => 'Edit Field',
        'export' => 'Allow export in table view',
        'fieldType' => 'Field Type',
        'showInTable' => 'Show in table view',

    ),
    'statusFields' => array(
        'defaultStatus' => 'Default Status',
        'addstatus' => 'Add Status',
        'createStatus' => 'Create Project Status',
        'editStatus' => 'Edit Project Status',
        'change' => 'You can not change inactive status to Default status',
        'addCategory' => 'Add Category',
        'editCategory' => 'Edit Category',
    ),
    'events' => array('addEvent' => 'Add Event',
        'eventName' => 'Event Name',
        'startOnDate' => 'Starts On Date',
        'startOnTime' => 'Starts On Time',
        'endOnDate' => 'Ends On Date',
        'endOnTime' => 'Ends On Time',
        'startOn' => 'Start On',
        'endOn' => 'End On',
        'addAttendees' => 'Add Attendees',
        'allEmployees' => 'All Employees',
        'where' => 'Where',
        'repeat' => 'Repeat',
        'repeatEvery' => 'Repeat every',
        'cycles' => 'Cycles',
        'cyclesToolTip' => 'Recurring will be stopped after the number of cycles. Keep it blank for infinity.',
        'viewAttendees' => 'View Attendees',
        'attendees' => 'Attendees',
        'remindBefore' => 'Remind before',
        'eventLink' => 'Event Link',
        'uploadFile' => 'Upload File',
    ),
    'payroll' => array(
        'addPayroll' => 'Add Payroll',
        'amountPaid' => 'Amount Paid',
        'updatePayroll' => 'Update Payroll',
        'projectPayrollReport' => 'Project Payroll Report',
        'totalEarning' => 'Total Earning',
    ),
    'roles' => array(
        'addRole' => 'Manage Role',
    ),
    'permission' => array(
        'projectNote' => 'User can view the basic details of projects assigned to him even without any permission.',
        'attendanceNote' => 'User can view his attendance even without any permission.',
        'taskNote' => 'User can view the tasks assigned to him even without any permission.',
        'ticketNote' => 'User can view the tickets generated by him as default even without any permission.',
        'eventNote' => 'User can view the events to be attended by him as default even without any permission.',
        'holidayNote' => 'User can view the holidays as default even without any permission.',
        'selectAll' => 'Select All',
        'addRoleMember' => 'Manage Role Members',
        'addMembers' => 'Add Members',
        'roleName' => 'Role Name',
        'deselectAll' => 'Deselect All',
        'permissions' => 'Permissions',
        'importFromRole' => 'Import from Role',
    ),
    'leaves' => array(
        'assignLeave' => 'Assign Leave',
        'addLeaveType' => 'Add Leave Type',
        'addLeave' => 'New Leave',
        'editLeave' => 'Edit Leave',
        'leaveType' => 'Leave Type',
        'selectDuration' => 'Select Duration',
        'leaveDate' => 'Leave Date',
        'single' => 'Full Day',
        'multiple' => 'Multiple',
        'halfDay' => 'Half Day',
        'hours' => 'Hours',
        'selectDates' => 'Select Dates',
        'reason' => 'Reason for absence',
        'statusReport' => 'Approval by reporting manager',
        'rejectReason' => 'Reason for leave rejection',
        'applicantName' => 'Applicant Name',
        'updateLeave' => 'Update Leave',
        'pendingLeaves' => 'Pending Leaves',
        'applyLeave' => 'Apply Leave',
        'noOfLeaves' => 'No of Leaves',
        'countLeavesFromDateOfJoining' => 'Count leaves from the date of joining',
        'countLeavesFromStartOfYear' => 'Count leaves from the start of the year',
        'leaveSettingNote' => 'Note: Approve means direct approval, Pre-Approval means another approval by admin/hr is required.',
        'preApprove' => 'Pre-Approve',
        'approve' => 'Approve',
        'canNotApprove' => 'Not Approve',
        'reportingManager' => 'Reporting Manager can',
        'theLeave' => 'the Leave',
        'leavesTaken' => 'Leaves Taken',
        'remainingLeaves' => 'Remaining Leaves',
        'myLeaves' => 'My Leaves',
        'tableView' => 'Table View',
        'calendarView' => 'Calendar View',
        'leaveRequest' => 'Leave Request',
        'upcomingLeaves' => 'Upcoming Leaves',
        'leavePaidStatus' => 'Leave Paid Status',
        'employeeOnLeave' => 'Employee is on leave',
        'employeesOnLeave' => 'Employees are on leave',
        'approvedAt' => 'Actioned At',
        'approvedBy' => 'Actioned By',
        'firstHalf' => 'First Half',
        'secondHalf' => 'Second Half',
        'monthLimitInfo' => 'Set 0 for no monthly limit',
        'monthLimit' => 'Monthly Limit',
        'relatedLeave' => 'Related Leaves',
        'preApproved' => 'Pre-Approved',
        'entitlement' => 'Entitlement',
        'effectiveAfter' => 'Effective After',
        'ofJoining' => 'of Joining',
        'unusedLeaves' => 'Unused Leaves',
        'canBeEncashed' => 'Can Be Encashed',
        'allowedProbation' => 'Allowed in probation',
        'allowedNotice' => 'Allowed in notice period',
        'applicability' => 'Applicability',
        'maritalStatus' => 'Marital Status',
        'married' => 'Married',
        'unmarried' => 'Single',
        'carryForward' => 'Carry Forward',
        'lapse' => 'Lapse',
        'editLeaveType' => 'Edit Leave Type',
        'approveAll' => 'Approve All',
        'rejectAll' => 'Reject All',
        'approveRemaining' => 'Approve Remaining',
        'rejectRemaining' => 'Reject Remaining',
    ),
    'lead' => array(
        'createTitle' => 'Add Lead Info',
        'companyDetails' => 'Company Details',
        'companyName' => 'Company Name',
        'website' => 'Website',
        'address' => 'Address',
        'leadDetails' => 'Lead Details',
        'clientName' => 'Lead Name',
        'clientEmail' => 'Lead Email',
        'emailNote' => 'Lead will login using this email.',
        'password' => 'Password',
        'passwordNote' => 'Client will login using this password.',
        'passwordUpdateNote' => 'Client will login using this password. (Leave blank to keep current password)',
        'mobile' => 'Phone Number',
        'updateTitle' => 'Update Lead Info',
        'addNewLead' => 'Add New Lead',
        'viewDetails' => 'View Details',
        'leadSource' => 'Lead Source',
        'leadStatus' => 'Lead Status',
        'leadFollowUp' => 'Follow Up Next',
        'remark' => 'Remark',
        'proposal' => 'Proposal',
        'proposalTemplate' => 'Proposal Template',
        'profile' => 'Profile',
        'followUp' => 'Follow Up',
        'note' => 'Note',
        'email' => 'Email',
        'source' => 'Source',
        'status' => 'Status',
        'leadDetail' => 'Lead Detail',
        'nextFollowUp' => 'Next Follow Up',
        'all' => 'All',
        'lead' => 'Lead',
        'client' => 'Client',
        'pending' => 'Pending',
        'changeToClient' => 'Change To Client',
        'addFollowUp' => 'Add Follow Up',
        'edit' => 'Edit',
        'action' => 'Action',
        'view' => 'View',
        'file' => 'Files',
        'leadAgent' => 'Lead Agent',
        'kanbanboard' => 'Kanban Board',
        'defaultLeadStatus' => 'Default Lead Status',
        'leadForm' => 'Lead Form',
        'iframeSnippet' => 'Copy & Paste the code anywhere in your site to show the form, additionally you can adjust the width and height px to fit your website.',
        'leadCategory' => 'Lead Category',
        'visibleToLead' => 'Visible To Lead',
        'leadEmailInfo' => 'Email will be used to send proposals.',
        'convertedLead' => 'Converted Leads',
        'changeAgent' => 'Change Agent',
        'estimateTemplate' => 'Estimate Template',
        'products' => 'Products',
        'convertedAmount' => 'Converted Amount',
        'convertedClient' => 'Converted into Client',
        'addLeadCategory' => 'Add Lead Category',
        'addFile' => 'Add Files',
        'addLeadSource' => 'Add Lead Source',
        'editLeadCategory' => 'Edit Lead Category',
        'editLeadSource' => 'Edit Lead Source',
        'editLeadStatus' => 'Edit Lead Status',
        'editFollowUp' => 'Edit FollowUp',
        'pipelineInfo' => 'A pipeline is a collection of stages that shows how a deal goes from when lead is generated to when you finalize the deal.',
    ),
    'proposal' => array(
        'createTitle' => 'Add Proposal Info',
        'updateTitle' => 'Update Proposal Info',
        'addNewLead' => 'Add New Proposal',
        'viewDetails' => 'View Details',
        'title' => ' Lead Proposal',
        'proposal' => ' Lead Proposal',
        'createProposal' => 'Create Proposal',
        'validTill' => 'Valid Till',
        'waiting' => 'Waiting',
        'accepted' => 'Accepted',
        'declined' => 'Declined',
        'updateProposal' => 'Update Proposal',
        'convertProposalTitle' => 'Convert Proposal To Invoice',
        'edit' => 'Edit',
        'action' => 'Action',
        'view' => 'View',
        'delete' => 'Delete',
        'download' => 'Download',
        'publicLink' => 'Public Link',
        'rejectConfirm' => 'Reject Confirm',
        'requireSignature' => 'Require customer signature for approval',
        'sendProposal' => 'Send Proposal',
        'addProposalTemplate' => 'Add Proposal Template',
        'proposalTemplate' => 'Proposal Template',
        'createProposalTemplate' => 'Create Proposal Template',
        'updateProposalTemplate' => 'Update Proposal Template',
        'name' => 'Name',
    ),
    'followup' => array(
        'newFollowUp' => 'New Follow Up',
        'updateFollow' => 'Update Follow Up',
        'addNewLead' => 'Add New Proposal',
        'viewDetails' => 'View Details',
        'title' => ' Lead Proposal',
        'proposal' => ' Lead Proposal',
        'createProposal' => 'Create Proposal',
        'validTill' => 'Valid Till',
        'waiting' => 'Waiting',
        'accepted' => 'Accepted',
        'declined' => 'Declined',
        'updateProposal' => 'Update Proposal',
        'convertProposalTitle' => 'Convert Proposal To Invoice',
        'followUpNotFound' => 'No follow up found',
        'followUpNote' => 'Follow up add and edit functionality will work when leading <b>next follow up</b> is set to <b>YES</b>.',
    ),
    'holiday' => array(
        'title' => 'Holiday',
        'addNewHoliday' => 'Add Holiday',
        'viewDetails' => 'View Details',
        'createHoliday' => 'Create Holiday',
        'followUpNotFound' => 'No Holiday found',
        'markSunday' => ' Mark Default Holidays',
        'date' => 'Date',
        'occasion' => 'Occasion',
        'day' => 'Day',
        'action' => 'Action',
        'listOf' => 'List Of',
        'viewOnCalendar' => 'View on Calendar',
        'markHoliday' => 'Mark Holiday',
        'officeHolidayMarkDays' => 'Mark days for default Holidays for the current year',
    ),
    'department' => array(
        'title' => 'Department',
        'addDepartment' => 'Add Department',
        'parentDepartment' => 'Parent Department',
        'dragAndDrop' => 'Drag & drop to restructure',
        'treeView' => 'Hierarchy View',
        'hierarchy' => 'Hierarchy',
        'searchValidation' => 'Type atleast 3 characters',
        'addTitle' => 'Add Department',
    ),
    'offlinePayment' => array(
        'title' => 'Offline Payment Method',
        'method' => 'Method',
        'description' => 'Description',
        'addMethod' => 'Add Offline Payment Method',
        'active' => 'Active',
        'inActive' => 'Inactive',
        'offlinePayment' => 'Offline Payment',
    ),
    'projectTemplate' => array(
        'addNewTemplate' => 'Add New Template',
        'projectName' => 'Template Name',
        'projectMembers' => 'Template Members',
        'createTitle' => 'Add Template Template',
        'selectClient' => 'Select Client',
        'startDate' => 'Start Date',
        'deadline' => 'Deadline',
        'projectSummary' => 'Template Summary',
        'note' => 'Note',
        'updateTitle' => 'Update Template Details',
        'projectCategory' => 'Template Category',
        'clientFeedback' => 'Client Feedback',
        'projectCompletionStatus' => 'Template Completion Status',
        'overview' => 'Overview',
        'members' => 'Members',
        'files' => 'Files',
        'activeTimers' => 'Active Timers',
        'whoWorking' => 'Who\'s Working',
        'activeSince' => 'Active Since',
        'openTasks' => 'Open Tasks',
        'daysLeft' => 'Days Left',
        'hoursLogged' => 'Hours Logged',
        'issuesPending' => 'Issues Pending',
        'activityTimeline' => 'Activity Timeline',
        'addMemberTitle' => 'Add Template Members',
        'uploadFile' => 'Upload File',
        'dropFile' => 'Drop files here OR click to upload',
        'updateSuccess' => ' project details updated.',
        'calculateTasksProgress' => 'Calculate progress through tasks',
        'viewGanttChart' => 'Gantt Chart',
        'clientViewTask' => 'Client can manage tasks of this project',
        'clientTaskNotification' => 'Send task notification to the client?',
        'manualTimelog' => 'Allow manual time logs',
        'dropFallbackMessage' => 'Your browser does not support drag\'n\'drop file uploads.',
        'dropFallbackText' => 'Please use the fallback form below to upload your files like in the olden days.',
        'dropFileTooBig' => 'File is too big ({{filesize}} MiB). Max filesize: {{maxFilesize}} MiB.',
        'dropInvalidFileType' => 'You can\'t upload files of this type.',
        'dropResponseError' => 'Server responded with {{statusCode}} code.',
        'dropCancelUpload' => 'Cancel upload',
        'dropCancelUploadConfirmation' => 'Are you sure you want to cancel this upload?',
        'dropRemoveFile' => 'Remove file',
        'dropMaxFilesExceeded' => 'You can not upload more then {{maxFiles}} files.',
    ),
    'templateTasks' => array(
        'newTask' => 'New Template Task',
        'lastCreated' => 'Last Created',
        'dueSoon' => 'Due Soon',
        'assignTo' => 'Assigned To',
        'high' => 'High',
        'medium' => 'Medium',
        'low' => 'Low',
        'priority' => 'Priority',
        'updateTask' => 'Update Template Task',
        'chooseAssignee' => 'Choose Assignee',
        'taskDetail' => 'Template Task Detail',
        'taskBoard' => 'Template Task Board',
        'addBoardColumn' => 'Add Status Column',
        'columnName' => 'Column Name',
        'labelColor' => 'Label Color',
        'tasksTable' => 'Tasks Table',
        'position' => 'Position',
        'subTask' => 'Sub Template Task',
        'comment' => 'Comment',
        'editBoardColumn' => 'Edit Status Column',
    ),
    'logTimeSetting' => array(
        'title' => 'Log Time Settings',
        'project' => 'Project',
        'task' => 'Task',
        'autoStopTimerAfterOfficeTime' => 'Stop timer automatically after office time.',
        'approvalRequired' => 'Timelog will require approval',
        'trackerReminder' => 'Send time tracker reminders',
        'dailyTimelogReport' => 'Send Daily Timelog Report',
    ),
    'taskCategory' => array(
        'addTaskCategory' => 'Add Task Category',
        'categoryName' => 'Category Name',
        'manageTaskCategory' => 'Manage Task Category',
        'taskCategory' => 'Task Category',
    ),
    'pushSettings' => array(
        'updateTitle' => 'Update Push Notification Settings',
        'oneSignalAppId' => 'One Signal App ID',
        'oneSignalRestApiKey' => 'One Signal Rest API Key',
        'notificationTitle' => 'Push Notification Settings',
    ),
    'timelogAlreadyExist' => 'Time-log already exist for this user.',
    'module' => array(
        'clients' => 'Clients',
        'employees' => 'Employees',
        'projects' => 'Projects',
        'proposals' => 'Proposals',
        'attendance' => 'Attendance',
        'tasks' => 'Tasks',
        'estimates' => 'Estimates',
        'invoices' => 'Invoices',
        'payments' => 'Payments',
        'tickets' => 'Tickets',
        'events' => 'Events',
        'noticeBoard' => 'Notice Board',
        'leaves' => 'Leaves',
        'leads' => 'Leads',
        'holidays' => 'Holidays',
        'products' => 'Products',
        'expenses' => 'Expenses',
        'timelogs' => 'Time Logs',
        'notice board' => 'Notice Board',
        'notices' => 'Notices',
        'messages' => 'Messages',
        'contracts' => 'Contracts',
        'product' => 'Product',
        'asset' => 'Assets',
        'payroll' => 'Payroll',
        'restapi' => 'RestAPI',
        'gitlab' => 'Gitlab',
        'zoom' => 'Zoom',
        'notes' => 'Notes',
        'reports' => 'Reports',
        'settings' => 'Settings',
        'dashboards' => 'Dashboards',
        'orders' => 'Orders',
        'sms' => 'SMS',
        'knowledgebase' => 'Knowledge Base',
        'addknowledgebaseCategory' => 'Manage Article Category',
        'emergency_contact' => 'Emergency Contact',
        'recruit' => 'Recruit',
        'bankaccount' => 'Bank Account',
        'purchase' => 'Purchase',
        'webhooks' => 'Webhooks',
        'letter' => 'Letter',
        'deals' => 'Deals',
        'qrcode' => 'QR Code',
        'cybersecurity' => 'Cyber Security',
    ),
    'projectSettings' => array(
        'sendNotificationsTo' => 'Send Reminder To',
    ),
    'loginAgain' => 'You will have to login again to see the changes.',
    'gdpr' => array(
        'gdpr' => 'GDPR',
        'customers' => 'Customers',
        'purpose' => 'Purpose',
        'ipAddress' => 'IP Address',
        'staffMember' => 'Staff Member',
        'additionalDescription' => 'Additional Description',
        'purposeDescription' => 'Purpose Description',
        'optIn' => 'OPT IN',
        'optOut' => 'OPT OUT',
        'consent' => 'Consent',
        'requestDataRemoval' => 'Request Data Removal',
        'dataRemovalDescription' => 'Briefly describe the purpose of removal of data',
        'removalRequestSuccess' => 'Removal request has been sent to the admin. You will be informed once it is approved',
        'enableGdpr' => 'Enable GDPR',
        'showGdprLinkInNavigation' => 'Show GDPR link in customers area navigation',
        'showGdprLinkInFooter' => 'Show GDPR link in customers area footer',
        'gdprTopInformationBlock' => 'GDPR page top information block',
        'enableCustomerToExportData' => 'Enable customers to export their data',
        'enableCustomerToRequestForDataRemove' => 'Enable customers to request for data remove',
        'enableLeadTorequestForDataRemove' => 'Enable leads to request for data removal (via the public form)',
        'enableTNCToCustomersFooter' => 'Enable Terms & Conditions to customers footer',
        'termsAndCondition' => 'Terms and Conditions',
        'privacyAndPolicy' => 'Privacy and Policy',
        'allowLeadToUpdateDataFromPublicForm' => 'Allow leads to update their data from public form',
        'enableConsentForCustomers' => 'Enable consent for customers',
        'enableConsentForLeads' => 'Enable consent for Leads',
        'publicPageConsentInformationBlock' => 'Public page consent information block',
        'viewConsent' => 'View Consent',
        'agree' => 'I Agree',
        'disagree' => 'I Disagree',
    ),
    'reports' => array(
        'totalExpense' => 'Total Expense',
        'totalCategories' => 'Total Categories',
    ),
    'contracts' => array(
        'createContract' => 'Create Contract',
        'createContractType' => 'Create Contract Type',
        'contractType' => 'Contract Type',
        'summery' => 'Summary',
        'discussion' => 'Discussion',
        'addComment' => 'Add Comment',
        'contractValue' => 'Contract Value',
        'contractNumber' => 'Contract Number',
        'endDate' => 'End Date',
        'totalContracts' => 'Total Contracts',
        'subject' => 'Subject',
        'description' => 'Description',
        'expired' => 'Expired',
        'active' => 'Active',
        'aboutToExpire' => 'About To Expire',
        'manageContractType' => 'Manage Contract Type',
        'addContractType' => 'Add Contract Type',
        'notes' => 'Notes',
        'editDiscussion' => 'Edit Discussion',
        'discussionUpdated' => 'Discussion successfully updated.',
        'discussionDeleted' => 'Discussion successfully deleted.',
        'discussionAdded' => 'Discussion successfully added.',
        'renewContract' => 'Renew Contract',
        'renewedThisContract' => 'renewed this contract',
        'newStartDate' => 'New start date',
        'newEndDate' => 'New end date',
        'newAmount' => 'New Contract Value',
        'contractRenewalHistory' => 'Contract Renewal History',
        'keepSignature' => 'Keep Customer Signature',
        'contractName' => 'Contract Name',
        'alternateAddress' => 'Alternate Address',
        'companyLogo' => 'Company Logo',
        'noValue' => 'No Value',
        'noEndDate' => 'No End Date',
        'streetAddress1' => 'Street Address 1',
        'streetAddress2' => 'Street Address 2',
        'setZero' => 'Set value to 0 if the contract does not have cost.',
    ),
    'burndown' => array(
        'actual' => 'Actual',
        'ideal' => 'Ideal',
    ),
    'clients' => array(
        'addShippingAddress' => 'Add Shipping Address',
        'shippingAddress' => 'Shipping Address',
    ),
    'discussions' => array(
        'lastCreated' => 'Last Created',
        'lastModified' => 'Last Modified',
        'discussionCategory' => 'Discussion Category',
        'replied' => 'replied at',
        'posted' => 'posted on',
        'bestReply' => 'Best Reply',
        'removeBestReply' => 'Remove as Best Reply',
        'goBestReply' => 'Go To Best Reply',
    ),
    'stripeCustomerAddress' => array(
        'details' => 'Address Details',
        'name' => 'Name',
        'line1' => 'Address Line',
        'postalCode' => 'Postal code',
        'city' => 'City',
        'state' => 'State',
        'country' => 'Country',
    ),
    'taskLabel' => array(
        'createLabel' => 'Create Label',
        'addLabel' => 'Add Label',
    ),
    'recurringInvoice' => array(
        'allowToClient' => 'Client can stop recurring.',
        'invoiceDate' => 'Date from which invoice will be created',
        'immediateInvoice' => 'Immediate start ( Invoice will generate from now )',
        'billingCycle' => 'No. of billing cycle is',
        'nextInvoiceDate' => 'Next Invoice Date will be',
        'currentInvoiceDate' => 'First Invoice will be generated on',
        'nextInvoice' => 'Next invoice',
        'firstInvoiceDate' => 'First Invoice Date',
        'lastInvoiceDate' => 'Last Invoice Date',
        'completedTotalInvoice' => 'Completed/Total Invoice',
        'week' => 'Week',
        'soOn' => 'And so on....'
    ),
    'expenseCategory' => array(
        'expenseCategoryReport' => 'Expense Category Report',
        'addExpenseCategory' => 'Add Expense Category',
        'categoryName' => 'Category Name',
        'allowRoles' => 'Allow Roles',
        'assignToRole' => 'Assign To Roles',
    ),
    'productCategory' => array(
        'subCategory' => 'Sub Category',
        'subCategoryName' => 'Sub Category Name',
        'category' => 'Category',
        'productCategory' => 'Product Category',
        'productSubCategory' => 'Product Sub Category',
        'filterByCategory' => 'Filter by category',
    ),
    'leads' => array(
        'name' => 'Name',
        'client_email' => 'Email',
        'client_name' => 'Name',
        'email' => 'Email',
        'company_name' => 'Company Name',
        'website' => 'Website',
        'address' => 'Address',
        'mobile' => 'Mobile',
        'message' => 'Message',
        'city' => 'City',
        'state' => 'State',
        'country' => 'Country',
        'postal_code' => 'Postal Code',
    ),

    'emailNotification' => array(
        'new-expenseadded-by-admin' => 'New Expense/Added by Admin',
        'new-expenseadded-by-member' => 'New Expense/Added by Member',
        'expense-status-changed' => 'Expense Status Changed',
        'user-registrationadded-by-admin' => ' User Registration/Added by Admin',
        'employee-assign-to-project' => 'Employee Assign to Project',
        'new-notice-published' => 'New Notice Published',
        'user-assign-to-task' => 'User Assign to Task',
        'new-leave-application' => 'New Leave Application',
        'task-completed' => 'Task Completed',
        'invoice-createupdate-notification' => 'Invoice Create/Update Notification',
        'payment-createupdate-notification' => 'Payment Create/Update Notification',
        'discussion-reply' => 'Discussion Reply',
        'new-proposal' => 'New Proposal',
        'lead-notification' => 'Lead notification',
        'birthday-notification' => 'Birthday Notification',
        'new-support-ticket-request' => 'New Support Ticket Request',
        'new-product-purchase-request' => 'New Product Purchase Request',
        'order-createupdate-notification' => 'Order Create/Update Notification',
        'user-join-via-invitation' => 'User Join Via Invitation',
        'follow-up-reminder' => 'Follow Up Reminder',
        'leave-approved' => 'Leave Approved',
        'leave-rejected' => 'Leave Rejected',
        'task-updated' => 'Task Updated',
        'new-task' => 'New Task',
        'new-client-task' => 'New Client Task',
        'task-update-client' => 'Task Update Client',
        'new-expense-added-by-admin' => 'New Expense/Added by Admin',
        'new-expense-added-by-member' => 'New Expense/Added by Member',
        'agent-ticket' => 'Agent Ticket',
        'new-ticket' => 'New Ticket',
        'invoice-created' => 'Invoice Created',
        'new-leave-request' => 'New Leave Request',
        'test-sms-notification' => 'Test Sms Notification',
        'attendance-reminder' => 'Attendance Reminder',
        'auto-task-reminder' => 'Auto Task Reminder',
        'contract-signed' => 'Contract Signed',
        'estimate-declined' => 'Estimate Declined',
        'event-invite' => 'Event Invite',
        'event-reminder' => 'Event Reminder',
        'recurring-expense-status-updated' => 'Recurring Expense Status Updated',
        'new-file-uploaded-to-project' => 'New File Uploaded to Project',
        'payment-received' => 'Payment Received',
        'recurring-invoice-status-updated' => 'Recurring Invoice Status Updated',
        'invoice-reminder' => 'Invoice Reminder',
        'invoice-updated' => 'Invoice Updated',
        'leave-updated' => 'Leave Updated',
        'multiple-leave-application' => 'Multiple Leave Application',
        'new-multiple-leave-application' => 'New Multiple Leave Application',
        'new-order' => 'New Order',
        'new-payment' => 'New Payment',
        'new-product-purchase' => 'New Product Purchase',
        'new-project' => 'New Project',
        'new-recurring-invoice' => 'New Recurring Invoice',
        'payment-reminder' => 'Payment Reminder',
        'project-reminder' => 'Project Reminder',
        'proposal-approved' => 'Proposal Approved',
        'proposal-rejected' => 'Proposal Rejected',
        'order-updated' => 'Order Updated',
        'new-ticket-reply' => 'New Ticket Reply',
        'new-ticket-request' => 'New Ticket Request',
        'task-completed-client' => 'Task Completed Client',
        'notice-updated' => 'Notice Updated',
        'removal-request-admin-notification' => 'Removal Request Admin Notification',
        'removal-request-approved' => 'Removal Request Approved',
        'removal-request-rejected' => 'Removal Request Rejected',
        'removal-request-approved-lead' => 'Removal Request Approved Lead',
        'removal-request-reject-lead' => 'Removal Request Reject Lead',
        'sub-task-assignee-added' => 'Sub Task Assignee Added',
        'sub-task-completed' => 'Sub Task Completed',
        'task-comment' => 'Task Comment',
        'task-note' => 'Task Note',
        'task-reminder' => 'Task Reminder',
        'removal-request-reject' => 'Removal Request Reject',
        'payment-notification' => 'Payment Notification',
        'employee-appreciation' => 'Employee Appreciation',
        'clock-in-notification' => 'Clock In Notification',
        'holiday-notification' => 'Holiday Notification',
        'estimate-notification' => 'Estimate Notification',
        'event-notification' => 'Event Notification',
        'message-notification' => 'Message Notification',
        'task-mention' => 'Task Mention Notification',
        'project-mention-notification' => 'Project Mention Notification',
        'task-mention-notification' => 'Task Mention Notification',
        'shift-assign-notification' => 'Shift Assign Notification',
        'two-factor-code' => 'Two Factor Code',
        'removal-request-reject-user' => 'Removal Request Reject User',
        'removal-request-approved-user' => 'Removal Request Approved User',
    ),
    'languageSettings' => array(
        'translate' => 'Translate',
        'autoTranslate' => 'Auto Translate Settings',
        'googleTranslationAPI' => 'Google Translation API key',
        'googleTranslationAPIMessage' => 'Enable Cloud Translation API from Google Cloud Console and create API key.',
        'fixTranslation' => 'Fix Translation',
        'fixTranslationInfo' => 'Are you sure you want to fix translation? It will remove all the custom translation and replace with default translation.',
        'fixTranslationSuccess' => 'Translation fixed successfully.',
    ),
    'checklist' => array(
        'checklistInfo' => 'We have prepared a list of things that will help you get there quickly.',
        'installation' => 'Installation',
        'installationInfo' => 'Upload files on the server and configure the database.',
        'accountSetup' => 'Account Setup',
        'accountSetupInfo' => 'Setup admin account details.',
        'companyLogo' => 'Add Company Logo',
        'companyLogoInfo' => 'This logo will show on Login, Register, and Sidebar menu.',
        'favicon' => 'Add Favicon',
        'faviconInfo' => 'This icon shows near the page title on the browser.',
        'profileImage' => 'Add Profile Picture',
        'profileImageInfo' => 'Add your profile picture.',
        'emailSetup' => 'Configure Email Settings',
        'configureEmailSetting' => 'Email setup is required to send emails to users for project, tasks, etc.',
        'crontSetup' => 'Setup Cron Job',
        'cronSetupInfo' => 'Cron job setup is required to send reminder notifications and background tasks.',
    ),
    'ticketForm' => 'Ticket Form',
    'orders' => array(
        'createOrder' => 'Create Order',
        'orderDate' => 'Order Date',
        'orderNumber' => 'Order Number',
    ),
    'pusher' => array(
        'notificationTitle' => 'Enable Pusher For',
        'userNotifications' => 'User Notifications',
    ),
    'twofactor' => array(
        'authenticateVia' => 'Authenticate Via',
        'userNotifications' => 'User Notifications',
        'twoFaInfo' => 'Increase your account\'s security by enabling Two-Factor Authentication (2FA)',
        '2faBarcode' => 'Set up your 2FA by scanning the barcode below.',
        '2faAppWarning' => 'You must set up your <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2" target="_blank">Google Authenticator app for android <i class="fa fa-external-link-alt"></i></a> or <a href="https://apps.apple.com/us/app/google-authenticator/id388497605" target="_blank">Google Authenticator app for IOS <i class="fa fa-external-link-alt"></i></a> before
    continuing. You will be unable to login otherwise.',
        'setupGoogleAuthenticator' => 'Setup Using Google Authenticator',
        'setupEmail' => 'Setup Using Email',
        'verifySmtp' => 'Email SMTP settings not configured.',
        'both' => 'Both',
        'validate2FA' => 'Validate 2FA',
    ),
    'import' => array(
        'file' => 'Upload File (file must be a file of type: xls, xlsx, csv)',
        'containsHeadings' => 'File Contains Headings Row',
    ),
    'productImage' => 'Product Image',
    'invoiceFiles' => 'Invoice Files',
    'googleCalendar' => array(
        'clientId' => 'Client ID',
        'clientSecret' => 'Client Secret',
    ),
    'databaseBackup' => array(
        'autobackup' => 'Auto Backup Settings',
        'createDatabaseBackup' => 'Create Database Backup',
        'backup' => 'Backup',
        'backupSize' => 'Backup Size',
        'hourOfDayForbackup' => 'Hour of day to perform backup',
        'createBackupAfterDay' => 'Create a backup every X days',
        'deleteBackupAfter' => 'Auto delete backups older than X days (set -1 to disable)',
        'enableCron' => 'Enable (Requires Cron)',
    ),
    'makeDefaultImage' => 'Set default',
    'emergencyContact' => array(
        'emergencyContact' => 'Emergency Contacts',
        'viewEmergencyContact' => 'View Emergency Contact',
        'editEmergencyContact' => 'Edit Emergency Contact',
        'addNewEmergencyContact' => 'Add New Emergency Contact',
    ),
    'invoiceExport' => 'Invoice',
    'taskShortCode' => 'Short Code',
    'taskCode' => 'Code',
    'ticketStatus' => ' Ticket Status',
    'flag' => 'Flag',
    'appreciations' => array(
        'icon' => 'Icon',
        'addAppreciation' => 'Add Appreciation',
        'editAppreciation' => 'Edit Appreciation',
        'appreciation' => 'Appreciation',
        'appreciationType' => 'Award',
        'appreciationTypeName' => 'Award Name',
        'addAppreciationType' => 'Add Award',
        'editAppreciationType' => 'Edit Award',
        'awardTo' => 'Given To',
        'awardToEmployee' => 'Given To ',
        'awardDate' => 'Given On',
        'photo' => 'Photo',
        'chooseIcon' => 'Choose Icon',
        'appreciationStatus' => 'Appreciation Status',
    ),
    'awards' => array(
        'appreciationType' => 'Award',
        'backgroundColor' => 'Icon Background Color',
    ),
    'bankaccount' => array(
        'bankName' => 'Bank Name',
        'addBankAccount' => 'Add Bank Account',
        'type' => 'Type',
        'accountName' => 'Account Holder Name',
        'accountType' => 'Account Type',
        'accountNumber' => 'Account Number',
        'contactNumber' => 'Contact Number',
        'openingBalance' => 'Opening Balance',
        'bankLogo' => 'Bank Logo',
        'cash' => 'Cash',
        'bank' => 'Bank',
        'updateBankAccount' => 'Update Bank Account',
        'relation' => 'Relation',
        'bankTransaction' => 'Bank Transaction',
        'bankTransfer' => 'Bank Transfer',
        'bankAccountTransfer' => 'Bank Account Transfer',
        'fromBankAccount' => 'From Bank Account',
        'toBankAccount' => 'To Bank Account',
        'memo' => 'Memo',
        'createTransaction' => 'Create Transaction',
        'deposit' => 'Deposit',
        'withdraw' => 'Withdraw',
        'transactionDate' => 'Transaction Date',
        'related' => 'Related',
        'bankBalance' => 'Bank Balance',
        'generateStatement' => 'Generate Statement',
        'bankStatement' => 'Bank Statement',
        'particulars' => 'Particulars',
        'saving' => 'Saving',
        'current' => 'Current',
        'statementDetail' => 'Statement of transactions in :accountType account number: :accountNumber in :currency For the period :startDate To :endDate',
        'bank-account-created' => 'Opening Balance',
        'bank-account-updated' => 'Bank Account Updated',
        'bank-account-transfer' => 'Bank Account Transfer',
        'bank-account-deposit' => 'Amount Deposit',
        'bank-account-withdraw' => 'Amount Withdraw',
        'payment-credited' => 'Payment Credited',
        'payment-updated' => 'Payment Updated',
        'payment-deleted' => 'Payment Deleted',
        'expense-added' => 'Expense Added',
        'expense-modified' => 'Expense Modified',
        'expense-deleted' => 'Expense Deleted',
        'accountStatus' => 'Account Status',
        'credit' => 'Credit',
        'debit' => 'Debit',
        'creditCard' => 'Credit Card',
        'loan' => 'Loans',
        'overdraft' => 'Overdraft',
        'insight' => 'Insight',
        'creditVsDebit' => 'Credit vs Debit',
        'recentTransactions' => 'Recent Transactions',
        'currencyHelp' => 'Enter the amount in ',
        'payment-debited' => 'Payment Debited',
    ),
    'unitType' => array(
        'UnitTypeName' => 'Unit Types',
        'unitType' => 'Unit Type'
    ),
    'addIpAddress' => 'Add IP Address',
    'leadContact' => array(
        'leadContacts' => 'Lead Contacts',
        'leadContact' => 'Lead Contact',
        'leadContactsName' => 'Lead Contact Name',
        'addLeadContact' => 'Add Lead Contact',
        'leadDetails' => 'Lead Contact Detail',
        'updateTitle' => 'Update Lead Contact',
        'title' => 'Lead Contact',
        'createTitle' => 'Add Lead Contact Info',
        'deal' => 'Deals',
        'stage' => 'Stage',
        'leadStage' => 'Deal Stage',
        'contactName' => 'Contact Name',
        'leadName' => 'Lead Name',
    ),
    'deal' => array(
        'title' => 'Deal',
        'dealName' => 'Deal Name',
        'pipeline' => 'Pipeline',
        'stages' => 'Deal Stages',
        'createTitle' => 'Add Deal info',
        'closeDate' => 'Close Date',
        'dealDetails' => 'Deal Details',
        'addDeal' => 'Add Deal',
        'addStages' => 'Add Stage',
        'dealValue' => 'Deal Value',
        'leadStages' => 'Deal Stages',
        'leadStage' => 'Deal Stage',
        'defaultLeadStage' => 'Default Deal Stage',
        'addPipeline' => 'Add Pipeline',
        'defaultPipeline' => 'Default Pipeline',
        'dealDetail' => 'Deal Detail',
        'dealAgent' => 'Deal Agent',
        'updateDeal' => 'Update Deal Info',
        'dealNote' => 'Deal Note',
        'dealNotes' => 'Deal Notes',
        'dealNoteDetails' => 'Deal Note Details',
        'addDealNote' => 'Add Deal Note',
        'updateDealNote' => 'Update Deal Note',
        'editDealNote' => 'Edit Deal Note',
        'dealInfo' => 'Deal Info',
        'changeStage' => 'Change Stage',
        'editDealStage' => 'Edit Deal Stage',
        'leadSetting' => 'Lead Setting',
        'totalDeals' => 'Total Deals',
        'dealConversions' => 'Deal Conversions',
        'convertedDeals' => 'Converted Deals',
        'dealVsStatus' => 'Deal Count by Stages and Pipeline',
        'dealnameInfo' => 'Assign a brief, relevant name for this sales opportunity within the current pipeline stage, such as "Website development" or "Product installation"',
        'totalDeals' => 'Total Deals',
        'wonDeals' => 'Won Deals',
        'lostDeals' => 'Lost Deals',
        'totalDealAmount' => 'Total Deal Amount',
        'leadContactEmail' => 'Lead Contact Email',
    ),
    'emailMarketing' => array(
        'addEmail' => 'Add Email Template',
        'editEmail' => 'Edit Email Template',
        'content' => 'Email Template Content',
        'emailDetail' => 'Email Template Detail',
        'sendEmail' => 'Send Email',
        'emailTo' => 'To',
        'emailCC' => 'CC',
    ),
    'resourceCenter' => array(
        'addResource' => 'Add Resource',
        'editResource' => 'Edit Resource',
        'url' => 'Resource URL',
        'icon' => 'Resource Icon',
        'colour' => 'Resource Card Colour',
    )
);
